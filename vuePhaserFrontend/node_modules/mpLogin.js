entername.onclick = function () {
	if (!gameProperties.in_game) {
		gameProperties.in_game = true; 
		
		signDiv.style.display = 'none'; 
        var playerName = signdivusername.value;
		//socket.emit('enter_name', {username: signdivusername.value});
        //joinGame(playerName);
        waitGame();
	}
}

function checkOutput(data, gameChecker) {
    console.log("checkOutput data: " + data);
}

function joinGame (newEnemyName, newEnemyId, newMap) {
    console.log("in joinGame: " + newEnemyName + " " + newEnemyId + " " + newMap);
	game.state.start(
        'mpGame', true, false, newEnemyName, newEnemyId, newMap
      );
}

// generate ID for each player
function generateID() {
     return Math.floor(Math.random() * 10000000000);
}


function waitGame() {
    //signDiv.style = 'display:none;';
    //notification.innerHTML = 'Waiting for another player';
    
    //connect to the server socket
    connect();
    
    playerName = signdivusername.value;
    playerId = generateID();
    
    // let the server know theres a new player
	$.ajax({
            type: "POST",
            url:"http://localhost:8080/user/create",
            data: "{'UID':" + playerId + ",'username':" + playerName +  "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json"
        });
    
    // check for game until another player joins
    var gameChecker = setInterval(function() {
        $.ajax({
            type: "POST",
            url:"http://localhost:8080/user/play",
            data: "{'UID':" + playerId + ",'username':" + playerName +  "}",
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (data) {
                //console.log("data is: " + data.username);
                console.log("data is123: " + data[0].username);
                if(data[0].username !== null && data[0].username !== undefined) {
                    clearInterval(gameChecker);
                    
                    console.log("read me here: " + data[1].username + " " +  data[1].uid + " " +data[1].map);
                    joinGame(data[1].username, data[1].uid, data[1].map);
                }
            }
        });
        
    }, 2000);

    setTimeout(function()
    {
        if(!gameStarted) {
            playerRequestGame(playerName, playerId);
            var ownInfo = JSON.stringify({'name' : playerName, 'id' : playerId});
            stompClient.send("/app/game", {}, ownInfo);
        }
            
    }, 1000);
    
}



var login = function(game){
};

login.prototype = {
	
	create: function () {
		game.stage.backgroundColor = "#AFF7F0";
		//socket = io({transports: ['websocket'], upgrade: false});
		//socket.on('join_game', join_game);
	}
}